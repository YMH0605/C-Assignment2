Three Sum:
public class Solution {
    public IList<IList<int>> ThreeSum(int[] nums) {
        IList<IList<int>> result = new List<IList<int>>();

        if (nums.Length <= 2)
        {
            return result;
        }
        Array.Sort(nums);
        for (int i = 0; i < nums.Length; i++)
        {
            if (i > 0 && nums[i] == nums[i-1])//If two adjacent nums have same value after sort
            {
                continue;
            }
            int left = i + 1, right = nums.Length - 1;
            while (left < right)
            {
                int sum = nums[i] + nums[left] + nums[right];
                if (sum > 0)
                {
                    right--; //move to smaller number
                }
                else if (sum < 0)
                {
                    left++; //move to a larger number
                }
                else
                {
                    List<int> temp = new List<int>{nums[i], nums[left], nums[right]};
                    result.Add(temp);
                    while (nums[right] == nums[right-1] && left < right) //Get rid of duplicates
                    {
                        right--;
                    }
                    while (nums[left] == nums[left+1] && left < right)
                    {
                        left++;
                    }
                    right--;
                    left++;
                }
            }


        }
        return result;

    }
}
